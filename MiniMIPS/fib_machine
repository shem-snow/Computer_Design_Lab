#	register	|	usage		|
# 	_________________________________
#	$t6		|	memory offset	|
#	$t7		|	loop counter	|
#	$t1		|	first		|
#	$t2		|	second		|
#	$a1		|	switch input	|
#	$v0		|	LED output	|

fibn:

	# initialize offset = 2 because the first two Fibonacci numbers are manually written
	001000_$0_$t6_0000000000000010
	
 	# initialize n = (14/2) = 7 because I write two Fibonacci numbers in each iteration
	001000_$0_$t7_0000000000000111 # $t7 is the destination

	# initialize first = 0
	000000_$0_$0_$t1_00000_100000

	# initialize second = 1
	001000_$0_$t2_0000000000000001 # $t2 is the destination
	
	# Manually set the first two Fibonacci numbers
	101000_$0_$0_0000000010000000
	101000_$t2_$0_0000000010000000
	
loopstart:
	# Exit the loop when n = 0
	000100_$t7_$0_end
	
	# Calculate and store the next two Fibonacci numbers and progress the array offset by two
	
	# f1 = f1 + f2
	000000_$t1_$t2_$t1_00000_100000
	101000_$t1_$t6_0000000010000000
	001000_$t6_$t6_0000000000000001
	
	# f2 = f1 + f2
	000000_$t1_$t2_$t2_00000_100000
	101000_$t2_$t6_0000000010000000
	001000_$t6_$t6_0000000000000001
	
	# Decrement the loop counter
	001000_$t7_$t7_1111111111111111
	
	# repeat until done
	000010_loopstart

loopend:
	000100_$0_$0_run
	000010_exit

run:
	# Load the array item at the offset indicated by the switch input into the LED output.
	001000_$a1_$t6_0000000010000000
	100000_$v0_$t6_0000000000000000
	000010_run

exit: