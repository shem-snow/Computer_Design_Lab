module PS2Handler(input clk, input currentDataBit, output data)

reg [3:0] count; 
reg [7:0] currentData;
reg[7:0] previousData;

initial begin 
currentData = 8'h00;
previousData = 8'h00;
count = 4'h0; 
end


always@ (negedge clk)
begin
	case(count)
	0: //start bit
	1: currentData[0] <= currentDataBit;
	2: currentData[1] <= currentDataBit;
	3: currentData[2] <= currentDataBit;
	4: currentData[3] <= currentDataBit;
	5: currentData[4] <= currentDataBit;
	6: currentData[5] <= currentDataBit;
	7: currentData[6] <= currentDataBit;
	8: currentData[7] <= currentDataBit;
	9: //parity bit
	10: //end bit
	endcase
	if(count < 4'd10)
		count <= count + 1;
	else if( count == 4'd10)
		count <= 0;
end



always@(*)
begin
if(count == 4'd10)
	data <= previousData;
else
	previousData <= currentData;
end module	